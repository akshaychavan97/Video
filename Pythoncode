import sys
import pyautogui
from PyQt5.QtWidgets import QApplication, QMainWindow, QPushButton, QLineEdit, QLabel
from docx import Document
from docx.shared import Inches

class ScreenshotApp(QMainWindow):
    def __init__(self):
        super().__init__()

        self.screenshot_flag = False
        self.screenshot_counter = 1

        self.initUI()

    def initUI(self):
        self.setGeometry(100, 100, 400, 250)
        self.setWindowTitle("Screenshot App")

        # Set background color
        self.setStyleSheet("background-color: lightblue;")

        self.test_case_label = QLineEdit(self)
        self.test_case_label.setPlaceholderText("Enter Test Case Name")
        self.test_case_label.setGeometry(50, 20, 300, 30)

        self.key_label = QLabel("Enter Key for Screenshot:", self)
        self.key_label.setGeometry(50, 70, 200, 30)

        self.key_input = QLineEdit(self)
        self.key_input.setGeometry(250, 70, 100, 30)

        self.start_button = QPushButton("Start", self)
        self.start_button.setGeometry(50, 120, 150, 30)
        self.start_button.setStyleSheet("background-color: green; color: white;")
        self.start_button.clicked.connect(self.start_screenshot)

        self.end_button = QPushButton("End", self)
        self.end_button.setGeometry(220, 120, 150, 30)
        self.end_button.setStyleSheet("background-color: red; color: white;")
        self.end_button.clicked.connect(self.end_screenshot)
        self.end_button.setEnabled(False)

    def start_screenshot(self):
        self.test_case_name = self.test_case_label.text().strip()
        if not self.test_case_name:
            return

        self.screenshot_key = self.key_input.text().strip()
        if not self.screenshot_key:
            return

        self.screenshot_flag = True
        self.start_button.setEnabled(False)
        self.end_button.setEnabled(True)

    def end_screenshot(self):
        self.screenshot_flag = False
        self.start_button.setEnabled(True)
        self.end_button.setEnabled(False)

        if self.screenshot_counter > 1:
            self.save_screenshot_to_word()

    def save_screenshot_to_word(self):
        document = Document()
        document.add_heading('Screenshots', 0)

        for i in range(1, self.screenshot_counter):
            screenshot_name = f'{self.test_case_name}_screenshot_{i}.png'
            pyautogui.screenshot(screenshot_name)
            document.add_paragraph(f'Screenshot {i}:')
            document.add_picture(screenshot_name, width=Inches(6))
        
        document_name = f'{self.test_case_name}_screenshots.docx'
        document.save(document_name)

    def keyPressEvent(self, event):
        if self.screenshot_flag and event.text() == self.screenshot_key:
            screenshot_name = f'{self.test_case_name}_screenshot_{self.screenshot_counter}.png'
            pyautogui.screenshot(screenshot_name)
            self.screenshot_counter += 1

def main():
    app = QApplication(sys.argv)
    window = ScreenshotApp()
    window.show()
    sys.exit(app.exec_())

if __name__ == '__main__':
    main()
